# -*- coding: utf-8 -*-
"""Cópia de notebook_inicial.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GMWNobuSKFIZk15DaEd1ExgJJC_kkg-3

# Conhecendo a base de dados

## Importando os dados
"""

import pandas as pd

url = 'https://raw.githubusercontent.com/alura-cursos/pandas-conhecendo-a-biblioteca/main/base-de-dados/aluguel.csv'
pd.read_csv(url)

pd.read_csv(url, sep=';')

dados = pd.read_csv(url, sep=';')

dados.head()

dados.tail()

type(dados)

"""## Características gerais da base de dados"""

dados.shape

dados.columns

dados.info()

dados['Tipo']

dados[['Quartos', 'Valor']]

media_valor = round(dados['Valor'].mean(), 2)
media_valor

desvio_padrao_quartos = round(dados['Quartos'].std(),2)
media_quartos = round(dados['Quartos'].mean(),2)
print(desvio_padrao_quartos, media_quartos)

"""# Análise exploratória de dados

## Qual o valor médio de aluguel por tipo de imóvel?
"""

dados.groupby('Tipo').mean(numeric_only=True)

dados.groupby('Tipo')['Valor'].mean()

dados.groupby('Tipo')[['Valor']].mean().sort_values('Valor')

DF_preco_tipo = dados.groupby('Tipo')[['Valor']].mean().sort_values('Valor')
DF_preco_tipo.plot(kind='barh', figsize=(14, 10), color='green')





"""## Removendo os imóveis comerciais"""

dados.Tipo.unique()

imoveis_comerciais = ['Conjunto Comercial/Sala', 'Prédio Inteiro', 'Loja/Salão',
       'Galpão/Depósito/Armazém', 'Casa Comercial',
       'Terreno Padrão', 'Box/Garagem',
       'Loja Shopping/ Ct Comercial', 'Chácara', 'Loteamento/Condomínio',
       'Sítio', 'Pousada/Chalé', 'Studio', 'Hotel', 'Indústria']

dados.query('@imoveis_comerciais in Tipo')

dados.query('@imoveis_comerciais not in Tipo')

df = dados.query('@imoveis_comerciais not in Tipo')

DF_preco_tipo = df.groupby('Tipo')[['Valor']].mean().sort_values('Valor')
DF_preco_tipo.plot(kind='barh', figsize=(14, 10), color='green')

df.Suites.unique()
df_sem_suites = [0]
df.query('@df_sem_suites not in Suites')

"""## Qual o percentual de cada tipo de imóvel na nossa base de dados?"""

df.Tipo.unique()

df.Tipo.value_counts(normalize=True).to_frame().sort_values('Tipo')

df.Tipo.value_counts (normalize = True).to_frame().sort_values('Tipo')
df_percentual_tipo = df.Tipo.value_counts(normalize=True).to_frame().sort_values('Tipo')
df_percentual_tipo

df_percentual_tipo.plot(kind = 'bar', figsize=(14,10) , color = 'green',
                        xlabel = 'Tipos', ylabel = 'Percentual')





"""### **Selecionando apenas os imóveis do tipo apartamento**"""

df.query('Tipo == "Apartamento"')

df = df.query('Tipo == "Apartamento"')
df.head()

df['Quartos'].mean()

bairros = df.Bairro.unique()
bairros.shape

df_valor_apartamento = df.groupby('Bairro') [['Valor']].mean().sort_values('Valor').round(2)
df_valor_apartamento

df_valor_apartamento.plot(kind = 'barh', figsize = (14,30), color = 'purple' , xlabel = 'Bairro', ylabel = 'Valor médio do aluguel')

"""# Tratando e filtrando os dados

## Lidando com dados nulos
"""

df.isnull()

df.isnull().sum()

df.fillna(0)

df = df.fillna(0)

df.isnull().sum()

"""## Removendo registros"""

df.query('Valor == 0 | Condominio == 0')

df.query('Valor == 0 | Condominio == 0').index

registros_a_remover = df.query('Valor == 0 | Condominio == 0').index

df.drop(registros_a_remover, axis=0, inplace=True )

df.query('Valor == 0 | Condominio == 0')

df.drop ('Tipo', axis=1, inplace=True)

df.head()

"""## Filtros

### **1. Apartamentos que possuem `1 quarto` e `aluguel menor que 1200`**
"""

df['Quartos'] == 1

seleção_1 = df['Quartos'] == 1

df[seleção_1]

selecao_2 = df['Valor'] < 1200
df[selecao_2]

df[seleção_1 & selecao_2]

df_1 = df[seleção_1 & selecao_2]

"""### **2. `Apartamentos` que possuem pelo menos `2 quartos`, `aluguel menor que 3000` e `area maior que 70`**"""

selecao = (df['Quartos'] >= 2) & (df['Valor'] == 3000) & (df['Area'] > 70)
df[selecao]

df_2 = df[selecao]

"""## Salvando os dados"""

df.to_csv('dados_tratados.csv')

pd.read_csv('dados_tratados.csv')

df.to_csv('dados_tratados.csv', index=False)

pd.read_csv('dados_tratados.csv')

df.to_csv('dados_tratados.csv', index=False, sep=';')

pd.read_csv('dados_tratados.csv')

pd.read_csv('dados_tratados.csv', sep=';')

df_1.to_csv('dados1_tratados.csv', index=False, sep=';')
df_2.to_csv('dados2_tratados.csv', index=False, sep=';')

"""# Manipulando os dados

## Criando colunas numéricas
"""

url = 'https://raw.githubusercontent.com/alura-cursos/pandas-conhecendo-a-biblioteca/main/base-de-dados/aluguel.csv'
pd.read_csv(url, sep=';')

dados ['Valor_mes'] = dados['Valor'] + dados['Condominio']
dados.head()

dados['Valor_ano'] = dados['Valor_mes'] * 12 + dados['IPTU']
dados.head()

"""## Criando colunas categóricas"""

dados['Descricao'] = dados['Tipo'] + ' em ' + dados['Bairro']
dados.head()

dados['Descricao'] = dados['Tipo'] + ' em ' + dados['Bairro'] + ' com ' + dados['Quartos'] + ' quartos e ' + dados['Vagas'] + ' vagas'
dados.head()

dados['Descricao'] = dados['Tipo'] + ' em ' + dados['Bairro'] + ' com ' + dados['Quartos'].astype(str) + ' quartos e ' + dados['Vagas'].astype(str) + ' vagas'
dados.head()

dados['Possui suite'] = dados['Suites'].apply(lambda x: 'sim' if x > 0 else 'não')
dados.head()

dados.to_csv('dados_completos_dev.csv', index=False, sep=';')

